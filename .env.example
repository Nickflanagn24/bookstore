WHAT IS THIS FILE?
# This is a template file that shows all the environment variables needed to 
# run the Tales & Tails Django bookstore application. It serves as documentation
# and a starting point for developers setting up the project.
#
# IS THIS FILE SAFE TO COMMIT?
# YES! This file contains NO sensitive information and is safe to commit to 
# version control. It only contains:
# - Template/placeholder values (e.g., "your-secret-key-here")
# - Example formats and structures
# - Documentation and comments
# - Default development values
#
# It does NOT contain:
# - Real passwords, API keys, or secrets
# - Production credentials
# - Actual database connection strings
# - Live payment processor keys
#
# HOW TO USE THIS FILE:
# 1. Copy this file: cp .env.example .env
# 2. Open the new .env file in your editor
# 3. Replace all placeholder values with your actual configuration
# 4. NEVER commit your .env file to version control (it should be in .gitignore)
#
# SECURITY NOTE:
# The .env file you create will contain sensitive information and should be:
# - Added to .gitignore
# - Never shared publicly
# - Kept secure on your local machine and servers
# - Different for each environment (development, staging, production)
#
# DEVELOPER SETUP CHECKLIST:
# □ Copy .env.example to .env
# □ Generate a new SECRET_KEY for your environment
# □ Configure database settings for your setup
# □ Set up email configuration (optional for development)
# □ Configure any third-party services you plan to use
# □ Verify .env is in your .gitignore file
#
# For detailed explanations of each variable, see the comments throughout this file.
# For more setup help, check the project README or contact the development team.
#
# =============================================================================

# =============================================================================
# DJANGO CORE SETTINGS
# =============================================================================

# Django Settings Module
# Determines which settings file to use (development, production, etc.)
# Options: bookstore_project.settings.development, bookstore_project.settings.production
DJANGO_SETTINGS_MODULE=bookstore_project.settings.development

# Secret Key for Django
# CRITICAL: Generate a new 50+ character secret key for production
# You can generate one using: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=your-super-secret-key-change-this-in-production

# Debug Mode
# Set to True for development, False for production
# WARNING: NEVER set DEBUG=True in production!
DEBUG=True

# Allowed Hosts
# Comma-separated list of domains that can serve this Django site
# For development: localhost,127.0.0.1
# For production: yourdomain.com,www.yourdomain.com
ALLOWED_HOSTS=localhost,127.0.0.1

# Environment Type
# Used for logging, monitoring, and conditional logic
# Options: development, staging, production
ENVIRONMENT=development

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Primary Database Settings
# For development, you can use SQLite by leaving these empty
# For production, use PostgreSQL for better performance and features

# Database Engine
# Options: django.db.backends.sqlite3, django.db.backends.postgresql
DB_ENGINE=django.db.backends.postgresql

# Database Name
# For SQLite: path to database file (e.g., db.sqlite3)
# For PostgreSQL: database name
DB_NAME=bookstore_db

# Database User
# PostgreSQL username (not needed for SQLite)
DB_USER=bookstore_user

# Database Password  
# PostgreSQL password (not needed for SQLite)
DB_PASSWORD=your_database_password

# Database Host
# For local development: localhost
# For production: your database server host
DB_HOST=localhost

# Database Port
# PostgreSQL default: 5432
# Leave empty for default port
DB_PORT=5432

# Read Replica Database (Optional - for scaling)
# Used for read-only queries to improve performance
DB_READ_HOST=localhost
DB_READ_USER=bookstore_read_user
DB_READ_PASSWORD=your_read_replica_password

# =============================================================================
# REDIS CACHE CONFIGURATION
# =============================================================================

# Redis URL for caching
# Format: redis://[:password]@host:port/db_number
# For local development: redis://127.0.0.1:6379/1
# For production with password: redis://:password@your-redis-host:6379/1
REDIS_URL=redis://127.0.0.1:6379/1

# Redis URL for sessions (separate database recommended)
REDIS_SESSION_URL=redis://127.0.0.1:6379/2

# Cache Timeout (in seconds)
# Default cache timeout for views and data
# 300 = 5 minutes, 900 = 15 minutes, 3600 = 1 hour
CACHE_TIMEOUT=300

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# Email Backend
# For development: django.core.mail.backends.console.EmailBackend (prints to console)
# For production: django.core.mail.backends.smtp.EmailBackend
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# SMTP Settings (for production)
# Your email provider's SMTP settings
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-specific-password

# Default From Email
# The email address that emails will be sent from
DEFAULT_FROM_EMAIL=noreply@talesandtails.com

# Admin Email
# Where error notifications and admin emails will be sent
ADMIN_EMAIL=admin@talesandtails.com

# =============================================================================
# STATIC FILES & MEDIA CONFIGURATION
# =============================================================================

# Use CDN for static files
# Set to True to use CloudFront or other CDN for static files
USE_CDN=False

# CloudFront Domain (if using AWS CDN)
# Your CloudFront distribution domain
CLOUDFRONT_DOMAIN=your-cloudfront-domain.cloudfront.net

# AWS S3 Settings (for media files)
# Required if storing user uploads (book covers, etc.) on S3
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_STORAGE_BUCKET_NAME=your-s3-bucket-name
AWS_S3_REGION_NAME=us-east-1

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Admin URL Secret
# Used to obscure the admin panel URL from /admin/ to something secret
# Example: if set to "super-secret", admin will be at /super-secret/admin/
SECRET_ADMIN_URL=admin

# HTTPS Settings (for production)
# Set to True if your site is served over HTTPS
USE_HTTPS=False

# Content Security Policy
# Set to True to enable CSP headers for additional security
ENABLE_CSP=False

# =============================================================================
# THIRD-PARTY INTEGRATIONS
# =============================================================================

# Sentry Error Tracking
# Get your DSN from sentry.io project settings
# Used for error monitoring and performance tracking in production
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Enable Sentry
# Set to True to enable Sentry error tracking
ENABLE_SENTRY=False

# Sentry Performance Monitoring
# Percentage of transactions to capture (0.0 to 1.0)
# 0.1 = 10% of requests, 1.0 = 100% of requests
SENTRY_TRACES_SAMPLE_RATE=0.1

# Google Analytics
# Your Google Analytics tracking ID (optional)
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# Facebook App ID (for social login - optional)
FACEBOOK_APP_ID=your-facebook-app-id
FACEBOOK_APP_SECRET=your-facebook-app-secret

# =============================================================================
# PAYMENT PROCESSING (STRIPE)
# =============================================================================

# Stripe API Keys
# Get these from your Stripe dashboard
# Use test keys for development, live keys for production
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key

# Stripe Webhook Secret
# Used to verify webhooks from Stripe
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# =============================================================================
# SEARCH CONFIGURATION
# =============================================================================

# Elasticsearch URL (optional - for advanced search)
# For local development: http://localhost:9200
# For production: your Elasticsearch cluster URL
ELASTICSEARCH_URL=http://localhost:9200

# Enable Elasticsearch
# Set to True to use Elasticsearch for search instead of database search
USE_ELASTICSEARCH=False

# =============================================================================
# LOGGING & MONITORING
# =============================================================================

# Log Level
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
# Use DEBUG for development, INFO or WARNING for production
LOG_LEVEL=DEBUG

# Log SQL Queries
# Set to True to log all database queries (useful for debugging)
# WARNING: This can generate large log files, use only in development
LOG_SQL=False

# Log Directory
# Where log files will be stored
LOG_DIR=/var/log/django

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Django Debug Toolbar
# Set to True to enable debug toolbar in development
# Automatically disabled in production
ENABLE_DEBUG_TOOLBAR=True

# Internal IPs
# IP addresses that can see debug toolbar and detailed error pages
INTERNAL_IPS=127.0.0.1,localhost

# =============================================================================
# BOOK CATALOG SETTINGS
# =============================================================================

# Books per page
# How many books to display per page in listings
BOOKS_PER_PAGE=12

# Enable book recommendations
# Set to True to enable "Customers also bought" features
ENABLE_RECOMMENDATIONS=True

# Max upload file size (in MB)
# Maximum file size for book cover uploads
MAX_UPLOAD_SIZE=10

# =============================================================================
# SESSION & COOKIE SETTINGS
# =============================================================================

# Session Cookie Age (in seconds)
# How long users stay logged in
# 86400 = 1 day, 604800 = 1 week, 2592000 = 30 days
SESSION_COOKIE_AGE=86400

# Cookie Domain (for production)
# Set to your domain to allow cookies across subdomains
# Example: .yourdomain.com
COOKIE_DOMAIN=

# =============================================================================
# RATE LIMITING
# =============================================================================

# Enable rate limiting
# Set to True to enable rate limiting for forms and API endpoints
ENABLE_RATE_LIMITING=True

# Rate limit for login attempts (per IP)
# Format: "attempts/timeperiod" (e.g., "5/m" = 5 attempts per minute)
LOGIN_RATE_LIMIT=5/m

# Rate limit for contact form submissions
CONTACT_FORM_RATE_LIMIT=3/h

# Rate limit for review submissions (per user)
REVIEW_RATE_LIMIT=10/h

# =============================================================================
# SOCIAL MEDIA & EXTERNAL SERVICES
# =============================================================================

# Facebook Page URL
# Your bookstore's Facebook page for social media integration
FACEBOOK_PAGE_URL=https://www.facebook.com/profile.php?id=61578628585792

# Company Information
# Used in emails and contact forms
COMPANY_NAME=Tales & Tails
COMPANY_EMAIL=info@talesandtails.com
COMPANY_PHONE=+1-555-0123

# =============================================================================
# BACKUP & MAINTENANCE
# =============================================================================

# Backup Settings
# Enable automatic database backups
ENABLE_AUTO_BACKUP=False

# Backup Location
# Where database backups will be stored
BACKUP_DIR=/var/backups/bookstore

# Maintenance Mode
# Set to True to show maintenance page to users
MAINTENANCE_MODE=False

# =============================================================================
# ADDITIONAL NOTES FOR DEVELOPERS
# =============================================================================
#
# 1. GETTING STARTED:
#    - Copy this file to `.env` in your project root
#    - Fill in the required values for your environment
#    - Never commit your `.env` file to version control
#
# 2. REQUIRED VARIABLES:
#    - SECRET_KEY: Generate a new one for each environment
#    - DATABASE settings: Configure based on your database choice
#    - ALLOWED_HOSTS: Set correctly for your domain
#
# 3. DEVELOPMENT vs PRODUCTION:
#    - Use different settings modules via DJANGO_SETTINGS_MODULE
#    - Always set DEBUG=False in production
#    - Use secure passwords and keys in production
#    - Enable HTTPS settings for production deployments
#
# 4. SECURITY CONSIDERATIONS:
#    - Generate strong, unique passwords for all services
#    - Use environment-specific secret keys
#    - Enable security features like CSP in production
#    - Regularly rotate API keys and passwords
#
# 5. PERFORMANCE OPTIMISATION:
#    - Configure Redis for caching in production
#    - Enable CDN for static files
#    - Use read replicas for database scaling
#    - Configure appropriate cache timeouts
#
# 6. MONITORING & DEBUGGING:
#    - Set up Sentry for production error tracking  
#    - Use appropriate log levels for each environment
#    - Monitor performance with Sentry traces
#
# 7. BACKUP & RECOVERY:
#    - Enable automatic backups in production
#    - Test restore procedures regularly
#    - Store backups securely and separately
#
# For more information, see the project documentation or contact the development team.
# =============================================================================